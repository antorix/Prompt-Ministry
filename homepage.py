#!/usr/bin/python
# -*- coding: utf-8 -*-

import io2
import territory
import contacts
import dialogs
import reports
import set
import notebook
import house_op
import time
import datetime
from icons import icon
from os import path, name
import sys
try:
    from os import startfile
except:
    pass

def homepage():
    """ Home page """

    def firstRun():
        """ –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—é settings[1]"""

        if io2.Mode == "desktop": # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–∞
            if name=="nt" and not path.exists(
                    path.expandvars("%userprofile%") + "/AppData/Local/Microsoft/Windows/Fonts/LiberationMono-Regular.ttf")\
                    and dialogs.dialogConfirm(
                        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rocket Ministry",
                        "–ü–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à—Ä–∏—Ñ—Ç Liberation Mono. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–µ–π—á–∞—Å?"
                    ) == True:
                try:
                    startfile("fonts_install.vbs")
                    time.sleep(2)
                except:
                    try:
                        import tkinter.messagebox
                        tkinter.messagebox.showinfo(
                            "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rocket Ministry",
                            "–ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç–∫—Ä–∞–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É —à—Ä–∏—Ñ—Ç–∞.")
                        startfile("LiberationMono-Regular.ttf")
                    except:
                        pass
        try:
            startfile("create_shortcuts.vbs") # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∫–æ–Ω–æ–∫
        except:
            pass

        message = "–£ –≤–∞—Å –µ—Å—Ç—å –º–µ—Å—è—á–Ω–∞—è –Ω–æ—Ä–º–∞ —á–∞—Å–æ–≤? –í–≤–µ–¥–∏—Ç–µ –µ–µ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ 0, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞:"
        while 1:
            hours = dialogs.dialogText(
                title = icon("timer") + " –ù–æ—Ä–º–∞ —á–∞—Å–æ–≤",
                message=message,
                default=str(io2.settings[0][3])
            )
            try:
                if hours != None:
                    if hours == "":
                        io2.settings[0][3] = 0
                    else:
                        io2.settings[0][3] = int(hours)
                else:
                    io2.save()
                    break
            except:
                message = "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ"
                continue
            else:
                io2.save()
                break

    def dailyRoutine():
        curTime = io2.getCurTime()

        if (curTime - io2.LastTimeDidChecks) > 86400 or (curTime - io2.LastTimeDidChecks) < 3:
            io2.LastTimeDidChecks = curTime

            if io2.settings[0][6] > 0:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—à–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
                io2.backupRestore(delete=True, silent=True)

            if io2.settings[0][11] == 1:
                print("–í—ã—è—Å–Ω—è–µ–º –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
                if len(datedFlats) == 1:
                    dialogs.dialogInfo(
                        title = icon("appointment") + " –í—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è",
                        message = "–°–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞! –í–∞—Å –∂–¥–µ—Ç %s." % datedFlats[0].getName(),
                        positive="OK",
                        negative=None

                    )
                    territory.flatView(datedFlats[0])
                elif len(datedFlats) > 1:
                    dialogs.dialogInfo(
                        title = icon("appointment") + " –í—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è",
                        message = "–°–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã %d –≤—Å—Ç—Ä–µ—á–∏!" % len(datedFlats),
                        positive="OK",
                        negative=None
                    )
                    io2.settings[0][4] = "–≤"
                    contacts.showContacts()

            print("–û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞")
            savedMonth = io2.settings[3]
            currentMonth = time.strftime("%b", time.localtime())
            if savedMonth != currentMonth:
                reports.report(newMonthDetected=True)
                io2.settings[3] = time.strftime("%b", time.localtime())
                io2.settings[2][11] = 1
                io2.save()

            if io2.settings[2][11] == 1:
                print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–¥–∞—á—É –æ—Ç—á–µ—Ç–∞")
                answer = dialogs.dialogConfirm(
                    title=icon("warning") + " –û—Ç—á–µ—Ç",
                    message="–í—ã —É–∂–µ —Å–¥–∞–ª–∏ –æ—Ç—á–µ—Ç?"
                )
                if answer == True:
                    reports.report(disableNotification=True)
                else:
                    reports.report(showLastMonth=True)

            print("–í—Å–µ –≥–æ—Ç–æ–≤–æ!")

    def weeklyRoutine():

        try:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ –Ω–µ–¥–µ–ª–∏
            today = datetime.datetime.strptime(time.strftime('%Y-%m-%d'), "%Y-%m-%d")
            lastUpdateDate = datetime.datetime.strptime(io2.settings[1], "%Y-%m-%d")
            diff = str(today.date() - lastUpdateDate.date())
            if "," in diff:
                diff = int(diff[0 : diff.index(" ")])
            else:
                diff=0
        except:
            diff=8
        if diff>7 and io2.settings[0][12] == 1:

            limit = 300
            print("–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –∂—É—Ä–Ω–∞–ª–∞ –æ—Ç—á–µ—Ç–∞")
            if len(io2.resources[2]) > limit:
                extra = len(io2.resources[2]) - limit
                for i in range(extra):
                    del io2.resources[2][len(io2.resources[2]) - 1]

            if io2.update() == True:
                return True

    io2.load()
    if "--capmode" in sys.argv:
        io2.simplified=0
        io2.settings[0][1]=1
    if io2.Mode == "desktop" and io2.settings[0][1] == 0:
        try:
            import desktop
        except:
            print("–ö–ª–∞—Å—Å Desktop –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω")
            io2.Mode = "text"
        else:
            dialogs.MainGUI = desktop.Desktop()

    if io2.settings[1]=="":
        firstRun()

    if weeklyRoutine() == True:
        return

    io2.save(forcedBackup=True)

    if "--capmode" in sys.argv:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        io2.Simplified=0
        io2.settings[0][1]=1

    while 1:

        appointment = "" # –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å–æ –≤—Å—Ç—Ä–µ—á–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        totalContacts, datedFlats = contacts.getContactsAmount(date=1)
        if len(datedFlats)>0:
            appointment = icon("appointment")

        dailyRoutine()

        if reports.updateTimer(io2.settings[2][6]) >= 0: # –ø—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–∞–π–º–µ—Ä
            time2 = reports.updateTimer(io2.settings[2][6])
        else:
            time2 = reports.updateTimer(io2.settings[2][6]) + 24
        if io2.settings[2][6] > 0:
            if io2.Mode != "desktop":
                timerTime = " \u2b1b %s" % reports.timeFloatToHHMM(time2)
            else:
                timerTime = " " + reports.timeFloatToHHMM(time2)
        else:
            if io2.Mode != "desktop":
                timerTime = " \u25b6"
            else:
                timerTime = " "

        if io2.settings[2][11]==1:
            remind = icon("bell")
        else:
            remind=""

        if io2.settings[0][3] != 0:
            if io2.settings[0][2] == True:  # –≤–∫–ª—é—á–µ–Ω –∫—Ä–µ–¥–∏—Ç —á–∞—Å–æ–≤
                credit = io2.settings[2][1]
            else:
                credit = 0
            gap = reports.getCurrentHours()[1]
            if gap >= 0:
                gap_str = icon("extra")
            else:
                gap_str = icon("slippage", simplified=False)
        else:
            gap_str = ""

        if house_op.calcDueTers() == 0: # –ø–æ–¥—Å—á–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤
            due = ""
        else:
            due = icon("warning")

        options = [
                icon("globe") +     " –£—á–∞—Å—Ç–∫–∏ (%d) %s" % (len(io2.houses), due),
                icon("contacts")+   " –ö–æ–Ω—Ç–∞–∫—Ç—ã (%d) %s" % (totalContacts, appointment),
                icon("report") +    " –û—Ç—á–µ—Ç (%s) %s %s" % (reports.getCurrentHours()[0], gap_str, remind),
                icon("notebook")+   " –ë–ª–æ–∫–Ω–æ—Ç (%d)" % len(io2.resources[0]),
                icon("search")  +   " –ü–æ–∏—Å–∫",
                icon("stats")   +   " –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (%s%%)" % house_op.countTotalProgress(),
                icon("calendar")+   " –°–ª—É–∂–µ–±–Ω—ã–π –≥–æ–¥",
                icon("file")    +   " –§–∞–π–ª",
                icon("preferences")+" –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                icon("info") +      " –û –ø—Ä–æ–≥—Ä–∞–º–º–µ"
                ]

        if io2.Mode=="desktop" and io2.settings[0][1]==0: # —É–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ü–ö
            for i in range(len(options)):
                options[i] = options[i][2:]

        if io2.Mode=="text" or io2.settings[0][1]==1:
            title = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Rocket Ministry! –í–≤–µ–¥–∏—Ç–µ help, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ. %s" % reports.getTimerIcon(io2.settings[2][6])
        else:
            title = "üöÄ Rocket Ministry " + reports.getTimerIcon(io2.settings[2][6])

        if io2.Simplified == 0:
            negative = "–í—ã—Ö–æ–¥"
        else:
            negative=None

        if io2.Mode == "sl4a":
            io2.clearScreen()
            io2.consoleReturn(pause=False)

        # Run home screen

        if io2.Mode != "desktop" or io2.settings[0][1]!=0:
            choice = dialogs.dialogList(
            form = "home",
            message = "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π:",
            title = title,
            options = options,
            positive=None,
            neutral = icon("timer") + " –¢–∞–π–º–µ—Ä" + timerTime,
            negative=negative
        )
        else:
            territory.terView()
            continue
        if menuProcess(choice)==True:
            continue
        elif choice=="neutral": # —Ç–∞–π–º–µ—Ä
            reports.toggleTimer()
            continue
        elif choice==None and negative!=None:
            return "quit"
        elif set.ifInt(choice) == True:
            result = options[choice]
        #else:
        #    continue

            if "–£—á–∞—Å—Ç–∫–∏" in result:
                territory.terView() # territory

            elif "–û—Ç—á–µ—Ç" in result:
                reports.report() # report

            elif "–ö–æ–Ω—Ç–∞–∫—Ç—ã" in result:
                contacts.showContacts() # contacts

            elif "–ë–ª–æ–∫–Ω–æ—Ç" in result:
                notebook.showNotebook() # notebook

            elif "–ü–æ–∏—Å–∫" in result:
                search(query="") # search

            elif "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" in result:
                stats() # stats

            elif "–°–ª—É–∂–µ–±–Ω—ã–π –≥–æ–¥" in result:
                serviceYear() # service year

            elif "–§–∞–π–ª" in result:
                if fileActions()==True:
                    return True

            elif "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" in result:
                if preferences()==True:
                    return True

            elif "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ" in result:
                if about()==True:
                    return True

            #elif "–í—ã—Ö–æ–¥" in result:
            #    return "quit"

def fileActions():
    """ Program settings on the start screen """

    while 1:

        options = [
            icon("download") + " –ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞",
            icon("export") + " –≠–∫—Å–ø–æ—Ä—Ç",
            icon("restore") + " –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
            icon("clear") + " –û—á–∏—Å—Ç–∫–∞"
        ]

        if io2.Mode == "sl4a":
            options.insert(1, icon("smartphone") + " –ò–º–ø–æ—Ä—Ç –∏–∑ –∑–∞–≥—Ä—É–∑–æ–∫")

        if io2.Simplified == False:
            options.append(icon("load") + " –ó–∞–≥—Ä—É–∑–∫–∞")
            options.append(icon("save") + " –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ")

        if io2.Mode == "sl4a":
            options.append(icon("explosion") + " –°–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ")

        if io2.Mode=="desktop" and io2.settings[0][1]==0: # —É–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ü–ö
            for i in range(len(options)):
                options[i] = options[i][2:]

        choice = dialogs.dialogList(  # display list of settings
            form="tools",
            title=icon("file") + " –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ " + reports.getTimerIcon(io2.settings[2][6]),
            message="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            options=options
        )
        if menuProcess(choice)==True:
            continue
        elif choice == None:
            break
        else:
            result = options[choice]

        if "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ" in result:
            io2.save(forced=True, silent=False)  # save

        elif "–ó–∞–≥—Ä—É–∑–∫–∞" in result:
            io2.houses.clear()
            io2.settings.clear()
            io2.resources.clear()
            io2.settings[:] = io2.initializeDB()[1][:]
            io2.resources[:] = io2.initializeDB()[2][:]
            io2.load(forced=True)  # load
            io2.save()

        elif "–≠–∫—Å–ø–æ—Ä—Ç" in result:
            io2.share()  # export

        elif "–ò–º–ø–æ—Ä—Ç –∏–∑ –∑–∞–≥—Ä—É–∑–æ–∫" in result: # –¥–ª—è Android
            io2.load(download=True, forced=True, delete=True)

        elif "–ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞" in result:
            io2.load(dataFile=None, forced=True, delete=True)

        elif "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ" in result:  # restore backup
            io2.backupRestore(restore=True)

        elif "–û—á–∏—Å—Ç–∫–∞" in result:
            io2.clearDB(silent=False)

        elif "–°–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ" in result:
            if dialogs.dialogConfirm(
                title = icon("explosion") + " –°–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ",
                message = "–í–Ω–∏–º–∞–Ω–∏–µ! –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –í–°–ï —Ñ–∞–π–ª—ã —Å–∞–º–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å, –ø–æ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–Ω–æ–≤–æ. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?"
            ) == True:
                io2.removeFiles(totalDestruction=True)
                return True
        else:
            continue

    return False

def toggle(setting):
    if set.ifInt(setting) == False:
        setting=0
    if setting == 1:
        return 0
    else:
        return 1

def preferences(getOptions=False):
    """ Program preferences """

    def status(setting):
        """ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ """
        if setting == 0 or set.ifInt(setting) == False:
            return icon("cross", simplified=False) + " "
        else:
            return icon("mark", simplified=False) + " "

    exit = 0

    while 1:
        options = []
        if io2.settings[0][14] != ".":
            importURL = "%s" % io2.settings[0][14]
        else:
            importURL = "–Ω–µ—Ç"

        options.append(status(io2.settings[0][13]) + "–ü—É–Ω–∫—Ç ¬´–Ω–µ—Ç –¥–æ–º–∞¬ª –≤ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏")
        options.append(status(io2.settings[0][18]) + "–ü—É–Ω–∫—Ç ¬´–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å¬ª –≤ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏")
        options.append(status(io2.settings[0][10]) + "–£–º–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏")
        options.append(status(io2.settings[0][7]) +  "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—á–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π")
        options.append(                       "%s –ù–æ—Ä–º–∞ —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü: %d" % (icon("box", simplified=False), io2.settings[0][3]))
        if io2.Mode != "desktop":
            options.append(status(io2.settings[0][20]) + "–†–µ–∂–∏–º —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π")
        options.append(status(io2.settings[0][2])  + "–ö—Ä–µ–¥–∏—Ç —á–∞—Å–æ–≤")
        options.append(status(io2.settings[0][11]) + "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        options.append(status(io2.settings[0][8])  + "–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ —Å–¥–∞—á–µ –æ—Ç—á–µ—Ç–∞")
        options.append(status(io2.settings[0][15]) + "–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –º–∏–Ω—É—Ç—ã –æ—Ç—á–µ—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü")
        if io2.Mode == "sl4a":
            options.append(status(io2.settings[0][0])+"–ë–µ—Å—à—É–º–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º —Ç–∞–π–º–µ—Ä–µ")
        options.append(status(io2.settings[0][21]) + "–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—ä–µ–∑–¥–æ–≤")
        options.append(status(io2.settings[0][9]) +  "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ü–∏—Ñ—Ä–æ–π –≤ –ø–æ—Å–µ—â–µ–Ω–∏–∏")
        options.append(                       "%s –†–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: %d" % (icon("box", simplified=False), io2.settings[0][6]))
        if io2.Simplified==0 and io2.Mode!="sl4a":
            options.append(                   "%s –§–∞–π–ª –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: %s" % (icon("box", simplified=False), importURL))
        if io2.Mode == "sl4a":
            options.append(status(io2.settings[0][16]) + "–†–µ–∂–∏–º —Å–º–∞–π–ª–∏–∫–æ–≤")
        options.append(status(io2.settings[0][12]) + "–ü—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        #if io2.Mode != "text":
        #    options.append(status(io2.settings[0][1])  + "–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
        if io2.Simplified == 0:
            options.append(status(territory.GridMode) + "–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤–∏–¥ –ø–æ–¥—ä–µ–∑–¥–∞")

        # settings[0][4] - –∑–∞–Ω—è—Ç–æ –ø–æ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤!

        # settings[0][19] - –∑–∞–Ω—è—Ç–æ –ø–æ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —É—á–∞—Å—Ç–∫–æ–≤!

        # settings[0][17] - —Å–≤–æ–±–æ–¥–Ω–æ

        if getOptions==True:
            return options

        choice = dialogs.dialogList(  # display list of settings
            form="preferences",
            title=icon("preferences") + " –ù–∞—Å—Ç—Ä–æ–π–∫–∏ " + reports.getTimerIcon(io2.settings[2][6]),
            options=options,
            positive=None,
            negative="–ù–∞–∑–∞–¥"
        )
        if menuProcess(choice)==True:
            continue
        elif choice==None:
            break
        elif set.ifInt(choice) == True:
            result = options[choice]
        else:
            continue

        feedSetting(result)

    if exit == 1:
        return True

def feedSetting(result, self=None):
    """ –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –ø–æ –Ω–µ–π –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É """

    if io2.Mode == "desktop" and io2.settings[0][1] == 0:
        dialogs.MainGUI.getWindowPosition()

    if "–ë–µ—Å—à—É–º–Ω—ã–π —Ä–µ–∂–∏–º" in result:
        io2.settings[0][0] = toggle(io2.settings[0][0])
        io2.save()

    elif "–Ω–µ—Ç –¥–æ–º–∞" in result:
        io2.settings[0][13] = toggle(io2.settings[0][13])
        io2.save()

    elif "–ö—Ä–µ–¥–∏—Ç —á–∞—Å–æ–≤" in result:
        io2.settings[0][2] = toggle(io2.settings[0][2])
        io2.save()

    elif "–ù–æ—Ä–º–∞" in result:
        message = "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—á–Ω—É—é –Ω–æ—Ä–º—É —á–∞—Å–æ–≤ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–∞–ø–∞—Å–∞ –∏–ª–∏ –æ—Ç—Å—Ç–∞–≤–∞–Ω–∏—è –æ—Ç –Ω–æ—Ä–º—ã –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å. –ï—Å–ª–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ 0:"
        while 1:
            choice2 = dialogs.dialogText(
                height=5,
                title="–ú–µ—Å—è—á–Ω–∞—è –Ω–æ—Ä–º–∞",
                message=message,
                default=str(io2.settings[0][3])
            )
            try:
                if choice2 != None:
                    if choice2 == "":
                        io2.settings[0][3] = 0
                    else:
                        io2.settings[0][3] = int(choice2)
                    if io2.Mode == "desktop" and io2.settings[0][1] == 0:
                        self.settingsMenu.entryconfig(4, label="–ù–æ—Ä–º–∞ —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü: %d" % io2.settings[0][3])
                    io2.save()
                else:
                    break
            except:
                message = "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ"
                continue
            else:
                break

    elif "–†–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π" in result:  # backup copies
        while 1:
            choice2 = dialogs.dialogText(
                title="–ß–∏—Å–ª–æ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π",
                message="–û—Ç 0 –¥–æ 10 000:",
                default=str(io2.settings[0][6]),
            )
            try:
                if choice2 != None:
                    io2.settings[0][6] = int(choice2)
                    if io2.settings[0][6] > 10000:
                        io2.settings[0][6] = 10000
                    elif io2.settings[0][6] < 0:
                        io2.settings[0][6] = 0
                    if io2.Mode == "desktop" and io2.settings[0][1] == 0:
                        self.settingsMenu.entryconfig(11, label="–†–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: %s" % choice2)
                    io2.save()
                else:
                    break
            except:
                io2.log("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ")
                continue
            else:
                break

    elif "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—á–µ—Ç" in result:
        io2.settings[0][7] = toggle(io2.settings[0][7])
        io2.save()

    elif "–†–µ–∂–∏–º —Å–º–∞–π–ª–∏–∫–æ–≤" in result:
        io2.settings[0][16] = toggle(io2.settings[0][16])
        io2.save()

    elif "–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—ä–µ–∑–¥–æ–≤" in result:
        io2.settings[0][21] = toggle(io2.settings[0][21])
        if io2.settings[0][21] == 1:
            dialogs.dialogInfo(
                doublesize=True,
                title="–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—ä–µ–∑–¥–æ–≤",
                message="–ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—ä–µ–∑–¥–∞ —É—á–∞—Å—Ç–∫–∞, –∫–æ–≥–¥–∞ –≤—ã –≤ –Ω–µ–º –±—ã–ª–∏:\n\n–≤ –±—É–¥–Ω–∏–π –¥–µ–Ω—å –≤ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –¥–Ω—è (–ø–µ—Ä–≤—ã–π –∫—Ä—É–∂–æ–∫ ‚Äì %s)\n\n–≤ –±—É–¥–Ω–∏–π –¥–µ–Ω—å –≤–µ—á–µ—Ä–æ–º (–≤—Ç–æ—Ä–æ–π –∫—Ä—É–∂–æ–∫ ‚Äì %s)\n\n–≤ –≤—ã—Ö–æ–¥–Ω–æ–π (—Ç—Ä–µ—Ç–∏–π –∫—Ä—É–∂–æ–∫ ‚Äì %s)\n\n–ï—Å–ª–∏ –ø–æ–¥—ä–µ–∑–¥ –ø–æ—Å–µ—â–µ–Ω –≤—Å–µ —Ç—Ä–∏ —Ä–∞–∑–∞, –æ–Ω —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –≤ —Ä–∞–∑–¥–µ–ª–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏." % (
                icon("porchCircle1"), icon("porchCircle2"), icon("porchCircle3")),
                positive="OK",
                negative=None
            )
        io2.save()

    elif "–†–µ–∂–∏–º —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π" in result:
        io2.settings[0][20] = toggle(io2.settings[0][20])
        io2.save()

    elif "–£–º–Ω–∞—è —Å—Ç—Ä–æ–∫–∞" in result:
        io2.settings[0][10] = toggle(io2.settings[0][10])
        io2.save()

    elif "–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ —Å–¥–∞—á–µ" in result:
        io2.settings[0][8] = toggle(io2.settings[0][8])
        io2.save()

    elif "–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å" in result:
        io2.settings[0][18] = toggle(io2.settings[0][18])
        io2.save()

    elif "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö" in result:
        io2.settings[0][11] = toggle(io2.settings[0][11])
        io2.save()

    elif "–ü—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è" in result:
        io2.settings[0][12] = toggle(io2.settings[0][12])
        io2.save()

    elif "–ü–∞—Ä–æ–ª—å –Ω–∞ –≤—Ö–æ–¥ " in result:
        choice2 = dialogs.dialogText(
            title=icon("preferences") + " –ü–∞—Ä–æ–ª—å –Ω–∞ –≤—Ö–æ–¥",
            message="–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ –≤—Ö–æ–¥ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É. –ó–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç ‚Äì –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ! –¢–∞–∫–∂–µ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–æ–ª—è. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å), —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ:",
            height=7
        )
        if choice2 == None:
            pass
        elif choice2 != "":
            io2.settings[0][16] = choice2
            io2.removeFiles(keepDatafile=True)
            io2.log("–ü–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            io2.settings[0][16] = ""
            io2.log("–ü–∞—Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        io2.save()

    elif "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞" in result:
        io2.settings[0][9] = toggle(io2.settings[0][9])
        if io2.settings[0][9] == 1:
            dialogs.dialogInfo(
                doublesize=True,
                title="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ü–∏—Ñ—Ä–æ–π –≤ –ø–æ—Å–µ—â–µ–Ω–∏–∏",
                message="–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è. –¢–µ–ø–µ—Ä—å, –≤–º–µ—Å—Ç–æ —Ä—É—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞, –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 5 –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è. –≠—Ç–∞ —Ü–∏—Ñ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–∫–∞–∫ –≤ ¬´—É–º–Ω–æ–π —Å—Ç—Ä–æ–∫–µ¬ª):\n\n0 = %s\n1 = %s\n2 = %s\n3 = %s\n4 = %s\n5 = %s\n\n–≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–∞–∫–æ–π —Ü–∏—Ñ—Ä—ã —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º (%s)." %
                        (icon("reject"), icon("interest"), icon("green"), icon("purple"), icon("brown"), icon("danger"),
                         icon("question")),
                positive="OK",
                negative=None
            )
        io2.save()

    elif "–§–∞–π–ª –∏–º–ø–æ—Ä—Ç–∞" in result:
        choice2 = dialogs.dialogFileOpen(default=io2.settings[0][14])
        if choice2 != ".":
            io2.settings[0][14] = choice2.strip()
        else:
            choice2="–Ω–µ—Ç"
        if io2.Mode == "desktop" and io2.settings[0][1] == 0:
            self.settingsMenu.entryconfig(12, label="–§–∞–π–ª –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: %s" % choice2)
        io2.save()

    elif "–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –º–∏–Ω—É—Ç—ã" in result:
        io2.settings[0][15] = toggle(io2.settings[0][15])
        io2.save()

    elif "–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º" in result:
        io2.settings[0][1] = toggle(io2.settings[0][1])
        io2.save()
        if io2.Mode == "desktop":
            if io2.settings[0][1] == 1:
                io2.settings[0][1] = 0
                dialogs.dialogInfo(
                    title="–í–Ω–∏–º–∞–Ω–∏–µ",
                    message="–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ —á–µ—Ä–µ–∑ —Ñ–∞–π–ª Rocket Ministry.py –∏–ª–∏ main.py.",
                    positive="OK",
                    negative=None,
                )
                io2.settings[0][1] = 1
            else:
                try:
                    import desktop
                except:
                    print("–ö–ª–∞—Å—Å Desktop –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω")
                    io2.Mode = "text"
                else:
                    try:
                        dialogs.MainGUI.update()
                    except:
                        dialogs.MainGUI = desktop.Desktop()

    elif set.r()[0] in result:
        choice2 = dialogs.dialogGetLib(
            title=icon("preferences") + " %s" % set.r()[0],
            message=set.r()[1],
            height=7,
            lib=False
        )
        if choice2 == None:
            if io2.Mode == "desktop" and io2.settings[0][1] == 0:
                self.settingsMenu.entryconfig(13, label="%s –Ω–µ—Ç" % set.r()[0])
            io2.save()
        elif choice2 != "":
            set.r(choice=choice2, set=True)
            if io2.Mode=="desktop" and io2.settings[0][1]==0:
                self.settingsMenu.entryconfig(13, label="%s %s" % (set.r()[0], set.r(choice=choice2, set=True, replace=True, getO=True)))
            io2.save()
        else:
            del io2.resources[2][0]
            io2.resources[2].insert(0, "")
            set.SysMarker = ""
            io2.log(set.r()[3])
            if io2.Mode == "desktop" and io2.settings[0][1] == 0:
                self.settingsMenu.entryconfig(13, label="%s –Ω–µ—Ç" % set.r()[0])
            io2.save()

    elif "–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤–∏–¥" in result:
        territory.GridMode = toggle(territory.GridMode)

    if io2.Mode == "desktop" and io2.settings[0][1] == 0 and self!=None:
        self.update(choices = self.choices)

def stats():
    status0 = status1 = status2 = status3 = status4 = status5 = nostatus = statusQ = returns = returns1 = returns2 = housesDue = porches = porchesCompleted = 0
    flats = records = percentage = worked = 0.0

    for house in io2.houses:
        d1 = house.date
        d2 = time.strftime("%Y-%m-%d", time.localtime())
        if house_op.days_between(d1, d2) > 122:  # —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤
            housesDue += 1
        percentage += house.getProgress()[0]
        worked += house.getProgress()[1]

        for porch in house.porches:
            porches += 1
            if porch.status == "üü°üü£üî¥" or porch.status == "‚óè‚óè‚óè":  # —Å–∫–æ–ª—å–∫–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
                porchesCompleted += 1

            for flat in porch.flats:
                if "." in flat.number:
                    continue
                flats += 1
                if flat.status == "0":  # —Å–∫–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–∞—Ö
                    status0 += 1
                if flat.status == "1":
                    status1 += 1
                if flat.status == "2":
                    status2 += 1
                if flat.status == "3":
                    status3 += 1
                if flat.status == "4":
                    status4 += 1
                if flat.status == "5":
                    status5 += 1
                if flat.getStatus()[1] == 4:
                    statusQ += 1
                if flat.status == "":
                    nostatus += 1
                if len(flat.records) > 1:  # –∫–≤–∞—Ä—Ç–∏—Ä —Å –±–æ–ª–µ–µ —á–µ–º –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é
                    returns += 1
                if len(flat.records) == 1:  # –∫–≤–∞—Ä—Ç–∏—Ä —Å –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é
                    returns1 += 1
                if len(flat.records) >= 2:  # –∫–≤–∞—Ä—Ç–∏—Ä —Å –±–æ–ª–µ–µ —á–µ–º –¥–≤—É–º—è –∑–∞–ø–∏—Å—è–º–∏
                    returns2 += 1

    if len(io2.houses)>0:
        percentage = int( percentage / len(io2.houses) * 100 )
    else:
        percentage = 0

    if housesDue == 0:
        due = ""
    else:
        due = icon("warning")
    if records == 0:
        records = 0.0001
    if porches == 0:
        porches = 0.0001
    if flats == 0:
        flats = 0.0001  # —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å

    message =    "–£—á–∞—Å—Ç–∫–æ–≤: " + str(len(io2.houses)) +\
                "\n–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: %d %s" % (housesDue, due) +\
                "\n\n–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: %d/%d (%d%%)" % (worked, flats, percentage) +\
                "\n\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("reject"), str(status0), status0 / flats * 100) +\
                "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("interest"), str(status1), status1 / flats * 100) + \
                "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("green"), str(status2), status2 / flats * 100) + \
                "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("purple"), str(status3), status3 / flats * 100) + \
                 "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("brown"), str(status4), status4 / flats * 100) + \
                 "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("danger"), str(status5), status5 / flats * 100) + \
                 "\n–í —Å—Ç–∞—Ç—É—Å–µ %s: %s (%d%%)" % (icon("question"), str(statusQ), statusQ / flats * 100)# + \
                 #"\n\n–ë–µ–∑ –ø–æ—Å–µ—â–µ–Ω–∏–π: %d (%d%%)" % (flats - worked, (flats - worked) / flats * 100) +\
                #"\n–° –æ–¥–Ω–∏–º –ø–æ—Å–µ—â–µ–Ω–∏–µ–º: %d (%d%%)" % (returns1, returns1 / flats * 100) +\
                #"\n–° –ø–æ–≤—Ç. –ø–æ—Å–µ—â–µ–Ω–∏—è–º–∏: %d (%d%%)" % (returns2, returns2 / flats * 100)

    if io2.settings[0][21]==1:
        message += "\n\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤: %d/%d (%d%%)" % \
                        (porchesCompleted, porches, porchesCompleted / porches * 100)

    dialogs.dialogInfo(
        doublesize=True,
        title=icon("stats") + " –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ " + reports.getTimerIcon(io2.settings[2][6]),
        message=message,
        positive=None,
        negative="–ù–∞–∑–∞–¥"
    )

def search(query=""):
    """ Search flats/contacts """

    if query == "":
        exit = 0
    else:
        exit = 1  # –µ—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∑–∞–¥–∞–Ω, —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –≤—ã–π—Ç–∏
    while 1:
        if query == "":
            query = dialogs.dialogText(  # get search query
                title = icon("search") + " –ü–æ–∏—Å–∫ " + reports.getTimerIcon(io2.settings[2][6]),
                default="",
                message="–ù–∞–π–¥–∏—Ç–µ –ª—é–±—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç:",
                neutral="–û—á–∏—Å—Ç."
            )
            if query == None or query=="":
                return

        elif query != None:

            # Valid query, run search

            while 1:
                query = query.lower()
                query = query.strip()
                allContacts = contacts.getContacts(forSearch=True)
                list = []

                for i in range(len(allContacts)):  # start search in flats/contacts
                    found = False
                    if query in allContacts[i][2].lower() or query in allContacts[i][2].lower() or query in \
                            allContacts[i][3].lower() or query in allContacts[i][8].lower() or query in allContacts[i][
                        10].lower() or query in allContacts[i][11].lower() or query in allContacts[i][
                        12].lower() or query in allContacts[i][13].lower():
                        found = True

                    if allContacts[i][8] != "virtual":
                        for r in range(len(io2.houses[allContacts[i][7][0]].porches[allContacts[i][7][1]].flats[
                                               allContacts[i][7][2]].records)):  # in records in flats
                            if query in io2.houses[allContacts[i][7][0]].porches[allContacts[i][7][1]].flats[
                                allContacts[i][7][2]].records[r].title.lower():
                                found = True
                            if query in io2.houses[allContacts[i][7][0]].porches[allContacts[i][7][1]].flats[
                                allContacts[i][7][2]].records[r].date.lower():
                                found = True
                    else:
                        for r in range(len(io2.resources[1][allContacts[i][7][0]].porches[0].flats[
                                               0].records)):  # in records in contacts
                            if query in io2.resources[1][allContacts[i][7][0]].porches[0].flats[0].records[r].title.lower():
                                found = True
                            if query in io2.resources[1][allContacts[i][7][0]].porches[0].flats[0].records[r].date.lower():
                                found = True

                    if found == True:
                        list.append([allContacts[i][7], allContacts[i][8], allContacts[i][2]])

                options2 = []
                for i in range(len(list)):  # save results
                    if io2.Mode == "text" or io2.settings[0][1] == 1:
                        number = ""
                    else:
                        number = "%d) " % (i+1)
                    if list[i][1] != "virtual":  # for regular flats
                        options2.append("%s%s-%s" % (number, io2.houses[list[i][0][0]].title,
                                                       io2.houses[list[i][0][0]].porches[list[i][0][1]].flats[
                                                           list[i][0][2]].title))
                    else:  # for standalone contacts
                        if io2.resources[1][list[i][0][0]].title == "":
                            title = ""
                        else:
                            title = io2.resources[1][list[i][0][0]].title + ", "
                        options2.append("%s%s%s" % (
                            number,
                            title,
                            io2.resources[1][list[i][0][0]].porches[0].flats[0].title))

                if len(options2) == 0:
                    options2.append("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

                # Show results

                choice2 = dialogs.dialogList(
                    form="search",
                    title=icon("search") + " –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É ¬´%s¬ª" % query,
                    message="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:",
                    options=options2
                )

                if menuProcess(choice2) == True:
                    continue

                elif choice2 == None:
                    if exit == 1:
                        return
                    else:
                        query = ""
                        break

                elif choice2 == "":
                    if exit == 1:
                        return
                    if io2.settings[0][1] == True:
                        break

                elif not "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ" in options2[0]:  # go to flat
                    h = list[choice2][0][0]  # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞, –ø–æ–¥—ä–µ–∑–¥–∞ –∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã
                    p = list[choice2][0][1]
                    f = list[choice2][0][2]
                    if list[choice2][1] != "virtual":  # regular contacts
                        result = territory.flatView(flat=io2.houses[h].porches[p].flats[f], house=io2.houses[h])
                        if result =="deleted":
                            io2.houses[h].porches[p].deleteFlat(f)
                            io2.save()
                            #query = None
                            break
                        elif result == "createdRecord" and io2.settings[0][9] == 0:
                            set.flatSettings(flat=io2.houses[h].porches[p].flats[f], house=io2.houses[h], jumpToStatus=True)
                            continue

                    else:  # standalone contacts
                        result = territory.flatView(flat=io2.resources[1][h].porches[0].flats[0], house=io2.resources[1][h], virtual=True)
                        if result == "deleted":
                            io2.log("–ö–æ–Ω—Ç–∞–∫—Ç %s —É–¥–∞–ª–µ–Ω" % io2.resources[1][h].porches[0].flats[0].getName())
                            del io2.resources[1][h]
                            io2.save()
                            #query = None
                            break
                        elif result == "createdRecord" and io2.settings[0][9] == 0:
                            set.flatSettings(flat=io2.resources[1][h].porches[0].flats[0], house=io2.resources[1][h], jumpToStatus=True)
                            continue

def serviceYear(count=False):
    while 1:
        options = []
        for i in range(12):  # filling options by months
            if i < 4:
                monthNum = i + 9
            else:
                monthNum = i - 3
            if io2.settings[4][i] == None:
                options.append(reports.monthName(monthNum=monthNum)[0])
            else:
                if io2.settings[4][i] == io2.settings[0][3]:
                    check = icon("mark")
                elif io2.settings[4][i] < io2.settings[0][3]:
                    check = icon("cross")
                elif io2.settings[4][i] > io2.settings[0][3] and io2.settings[0][3] != 0:
                    check = icon("up")
                else:
                    check = ""
                options.append("%s %d %s" % ((reports.monthName(monthNum=monthNum)[0] + ":", io2.settings[4][i], check)))

        #if int(time.strftime("%m", time.localtime())) <= 9:  # current service year, changes in October
        #    year = "%d" % int(time.strftime("%Y", time.localtime()))
        #else:
        #    year = "%d" % int(time.strftime("%Y", time.localtime()))

        hourSum = 0.0  # total sum of hours
        monthNumber = 0  # months entered
        for i in range(len(io2.settings[4])):
            if io2.settings[4][i] != None:
                hourSum += io2.settings[4][i]
                monthNumber += 1
        yearNorm = float(io2.settings[0][3]) * 12  # other stats
        gap = (12 - monthNumber) * float(io2.settings[0][3]) - (yearNorm - hourSum)
        if count==True:
            return gap
        if gap >= 0:
            gapEmo = icon("extra")
            gapWord = "–ó–∞–ø–∞—Å"
        elif gap < 0:
            gapEmo = icon("slippage")
            gapWord = "–û—Ç—Å—Ç–∞–≤–∞–Ω–∏–µ"
        else:
            gapEmo = ""
        if io2.settings[0][3]!=0:
            neutral = icon("calc") + " –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
        else:
            neutral = None
        title = "%s –í—Å–µ–≥–æ %s —á." % (icon("calendar"), reports.timeFloatToHHMM(hourSum)[ 0 : reports.timeFloatToHHMM(hourSum).index(":") ],)
        if io2.settings[0][3] != 0:
            title += " ‚á® %+d %s %s" % (gap, gapEmo, reports.getTimerIcon(io2.settings[2][6]))

        # Display dialog

        choice = dialogs.dialogList(
            title=title,
            message="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü:",
            form="serviceYear",
            neutral=neutral,
            options=options)

        if menuProcess(choice)==True:
            continue

        elif choice == None:
            break

        elif choice == "x":
            continue

        elif choice == "neutral":  # calc

            if monthNumber != 12:
                average = (yearNorm - hourSum) / (12 - monthNumber)  # average
            else:
                average = yearNorm - hourSum
            dialogs.dialogInfo(
                doublesize=True,
                title="%s –ê–Ω–∞–ª–∏—Ç–∏–∫–∞" % icon("calc"),
                message="–ú–µ—Å—è—Ü–µ–≤ –≤–≤–µ–¥–µ–Ω–æ: %d\n\n" % monthNumber +
                        "–ß–∞—Å–æ–≤ –≤–≤–µ–¥–µ–Ω–æ: %d\n\n" % hourSum +
                        "–ì–æ–¥–æ–≤–∞—è –Ω–æ—Ä–º–∞¬π: %d\n\n" % yearNorm +
                        "–û—Å—Ç–∞–ª–æ—Å—å —á–∞—Å–æ–≤: %d\n\n" % (yearNorm - hourSum) +
                        "%s: %d %s\n\n" % (gapWord, abs(gap), gapEmo) +
                        "–°—Ä–µ–¥–Ω–µ–µ –∑–∞ –º–µ—Å—è—Ü¬≤: %0.f\n\n" % average +
                        "____\n" +
                        "¬π –†–∞–≤–Ω–∞ 12 * –º–µ—Å—è—á–Ω–∞—è –Ω–æ—Ä–º–∞ (–≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö).\n\n" +
                        "¬≤ –°—Ä–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ —á–∞—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–ª—É–∂–∏—Ç—å –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –≤ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è (–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ) –º–µ—Å—è—Ü—ã.",
                negative="–ù–∞–∑–∞–¥"
            )
        else:
            if choice < 4:
                monthNum = choice + 9
            else:
                monthNum = choice - 3
            if io2.settings[4][choice]!=None:
                options2 = [icon("edit") + " –ü—Ä–∞–≤–∏—Ç—å ", icon("cut") + " –û—á–∏—Å—Ç–∏—Ç—å "]
                if io2.Mode == "desktop" and io2.settings[0][1] == 0:  # —É–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ü–ö
                    for i in range(len(options2)):
                        options2[i] = options2[i][2:]
                choice2 = dialogs.dialogList(
                    title=icon("report") + " %s" % reports.monthName(monthNum=monthNum)[0],
                    options=options2,
                    message="–ß—Ç–æ –¥–µ–ª–∞—Ç—å —Å –º–µ—Å—è—Ü–µ–º?",
                    form="noteEdit"
                )
            else:
                choice2=0

            if choice2 == 0:  # edit
                if io2.settings[4][choice] != None:
                    default = str(int(io2.settings[4][choice]))
                else:
                    default = ""
                message="–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞:"
                while 1:
                    choice3 = dialogs.dialogText(
                        title=icon("report") + " %s" % reports.monthName(monthNum=monthNum)[0],
                        message=message,
                        default=default,
                        height=1
                    )
                    if choice3 == None:
                        break
                    elif "cancelled!" in choice3:
                        continue
                    elif set.ifInt(choice3)==False or int(choice3)<0:
                        message="–¢—Ä–µ–±—É–µ—Ç—Å—è —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ:"
                    else:
                        io2.settings[4][choice] = int(choice3)
                        io2.save()
                        break

            if choice2 == 1:
                io2.settings[4][choice] = None  # clear
                io2.save()
            else:
                continue

def about():
    while 1:
        choice = dialogs.dialogInfo(
            title=icon("info") + " –û –ø—Ä–æ–≥—Ä–∞–º–º–µ " + reports.getTimerIcon(io2.settings[2][6]),
            largeText=True,
            message =   "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–±–∞–π–Ω –≤–∞—à–µ–≥–æ —Å–ª—É–∂–µ–Ω–∏—è\n\n"+\
                        "–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: %s\n\n" % io2.Version +\
                        "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: %s\n\n" % io2.getDBCreatedTime() +\
                        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:\ngithub.com/antorix/Rocket-Ministry\n\n"+\
                        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram-–∫–∞–Ω–∞–ª:\nt.me/rocketministry",
            positive = icon("update") + " –û–±–Ω–æ–≤–ª.",
            neutral = icon("help") + " –ü–æ–º–æ—â—å",
            negative="–ù–∞–∑–∞–¥"
        )
        if choice=="positive":
            if io2.update(forced=True) == True:
                return True
        elif choice=="neutral":
            helpPage = "https://github.com/antorix/Rocket-Ministry/wiki#—á–∞—Å—Ç–æ-–∑–∞–¥–∞–≤–∞–µ–º—ã–µ-–≤–æ–ø—Ä–æ—Å—ã"
            if io2.Mode=="sl4a":
                time.wait(0.5)
                from androidhelper import Android
                Android().view(helpPage)
                io2.consoleReturn()
            else:
                from webbrowser import open
                open(helpPage)
        else:
            break

def menuProcess(choice):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥, –µ—Å–ª–∏ –æ–Ω –ø–æ–ª—É—á–µ–Ω –∏–∑ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –Ω–∞ –ü–ö)"""
    if io2.Mode!="desktop":
        return False
    result = False
    if choice=="ter":
        territory.terView()
        result = True
    if choice=="report":
        reports.report()
        result = True
    elif choice=="file":
        fileActions()
        result = True
    elif choice=="settings":
        preferences()
        result = True
    elif choice=="notebook":
        notebook.showNotebook()
        result = True
    elif choice=="home":
        territory.terView()
        result = True
    elif choice=="about":
        about()
        result = True
    elif choice=="timer":
        reports.toggleTimer()
        result = True
    elif choice=="contacts":
        contacts.showContacts()
        result = True
    elif choice=="statistics":
        stats()
        result = True
    elif choice=="serviceyear":
        serviceYear()
        result = True
    elif choice == "import":
        io2.load(dataFile=None, forced=True, delete=True)
    elif choice == "export":
        io2.share()
    elif choice == "restore":
        io2.backupRestore(restore=True)
    elif choice == "wipe":
        io2.clearDB(silent=False)
    elif choice == "exit":
        io2.share(silent=True)
        #sys.exit(0)
    return result
